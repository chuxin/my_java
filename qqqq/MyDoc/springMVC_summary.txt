1、SpringMVC 介绍
    概念：
        Spring MVC 是 Spring 提供的一个基于 MVC 设计模式的轻量级 Web 开发框架。
        Spring MVC 是结构最清晰的 Servlet + JSP + JavaBean 的实现。JavaBean 相当于 Model，Servlet 相当于 Controller，JSP 相当于 View
        Spring MVC 和 Struts2 类似，是一款基于传统 MVC 设计模式的 Java EE 框架。近年来 Spring MVC 已取代 Struts2 框架。

    原理：
        参考图 - MyDoc/Spring MVC执行流程.png
        SpringMVC 的执行流程如下：
            用户点击某个请求路径，发起一个 HTTP request 请求，该请求会被提交到 DispatcherServlet（前端控制器）；
            由 DispatcherServlet 请求一个或多个 HandlerMapping（处理器映射器），并返回一个执行链（HandlerExecutionChain）。
            DispatcherServlet 将执行链返回的 Handler 信息发送给 HandlerAdapter（处理器适配器）；
            HandlerAdapter 根据 Handler 信息找到并执行相应的 Handler（常称为 Controller）；
            Handler 执行完毕后会返回给 HandlerAdapter 一个 ModelAndView 对象（Spring MVC的底层对象，包括 Model 数据模型和 View 视图信息）；
            HandlerAdapter 接收到 ModelAndView 对象后，将其返回给 DispatcherServlet ；
            DispatcherServlet 接收到 ModelAndView 对象后，会请求 ViewResolver（视图解析器）对视图进行解析；
            ViewResolver 根据 View 信息匹配到相应的视图结果，并返回给 DispatcherServlet；
            DispatcherServlet 接收到具体的 View 视图后，进行视图渲染，将 Model 中的模型数据填充到 View 视图中的 request 域，生成最终的 View（视图）；
            视图负责将结果显示到浏览器（客户端）。

    安装：
        a.安装 tomcat
            brew install tomcat
            安装在 /usr/local/Cellar/tomcat 目录
        b.创建 springMVC 项目
            ① 创建 src/main/resources/applicationContext.xml  用来扫描代码目录
            ② 创建 src/main/webapp/WEB-INF/web.xml 这是 springMVC 的框架配置文件
            ③ 创建 渲染页面  src/main/webapp/index.jsp
            ④ pom.xml 里把依赖包加上
                Spring MVC 依赖 JAR 包文件，包括 Spring 的核心 JAR 包和 commons-logging 的 JAR 包
            ⑤ 测试代码文件 src/main/java/com/lvmenglou/action/HelloWorld.java
            ⑥ 编辑器里 File -> project structure -> Artifacts -> qqqq:war exploded
                    -> 如果没有就要添加， WEB-INF/lib 添加 tomcat 执行依赖包
                    -> 如果没有就要添加，'qqqq' module:'web' facet resources
            ⑦ 编辑器里 Run -> edit configurations -> + -> local tomcat
                    -> application server -> /usr/local/Cellar/tomcat/10.0.7/libexec
                    -> deployment -> + -> qqqq:war exploded -> application context 值设为 /
                说明：
                    war模式：将WEB工程以包的形式上传到服务器 ；
                    war exploded模式：将WEB工程以当前文件夹的位置关系上传到服务器；
        参考博文： https://www.modb.pro/db/148930

2、M - V - C 使用
    V - 视图解析器
        支持多种视图技术：JSP、FreeMarker、Tiles、iText 和 POI。Spring MVC 框架并不关心使用的视图技术，也不会强迫开发者只使用 JSP。

    C - 控制器



3、具体使用








存放在 /WEB-INF/ 目录下的内容不能直接通过 request 请求得到，所以为了安全性考虑，通常把 jsp 文件放在 WEB-INF 目录下


Spring提供了13个基本的视图解析器，能够将逻辑视图名转换为物理实现，此处我们只了解其中几个比较常用的视图解析器：
	•	FreeMarkerViewResolver：将视图解析为 FreeMarker 模板
	•	InternalResourceViewResolver：将视图解析为Web应用的内部资源
	•	TilesViewResolver：将视图解析为 Apache Tile 定义，其中 tile ID 与视图名称相同。注意有两个不同的TilesViewResolver实现，分别对应于 Tiles 2.0 和Tiles 3.0
	•	ThymeleafViewResolver： 将逻辑视图名称解析为 Thymeleaf 模板视图
使用不同的解析器可以实现将视图解析成不同类型的内容展现




X、非常在理的话
    注意：由于 Spring MVC 结构比较复杂，所以学习的时候也要掌握学习方法。首先要明确 Spring MVC 是一个工具，既然是工具，
    那么我们就需要先掌握工具的使用方法，不要陷入细节中，深入浅出，慢慢通过实际运用来加深对其的理解。













