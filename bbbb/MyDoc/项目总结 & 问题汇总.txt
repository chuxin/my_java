问题描述：
    java: 错误: 不支持发行版本 5
解决办法：
    https://blog.csdn.net/qq_51263533/article/details/120209830
        采用了文章中 4.半劳永逸解决 的办法


Maven搭建Spring框架
https://blog.csdn.net/qq_41404112/article/details/107313840


Maven 包源地址：
    https://repo.maven.apache.org/maven2/
    https://repo1.maven.org/maven2/org/slf4j/slf4j-api/
    https://mvnrepository.com/artifact/org.aspectj/aspectjtools

pom.xml如何配置，如下为例：
https://repo.maven.apache.org/maven2/log4j/log4j/1.2.9/
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.9</version>
</dependency>


问题描述：
    intellij  Cannot resolve symbol 'springframework'
原因：
    粗暴的把项目从一个目录拷贝到另一个目录导致, lib 目录下的包关联不到
解决办法：
    File -> project structure -> problems -> [fix]


问题描述：
    SLF4J: No SLF4J providers were found.
    SLF4J: Defaulting to no-operation (NOP) logger implementation
    SLF4J: See http://www.slf4j.org/codes.html#noProviders for further details.
原因：
    项目里引入了 slf4j-api-xx.jar，但是 slf4j-api 本身不是一个日志实现库，而是一个日志库的抽象层，它必须依赖底层的日志库，
    SLF4J必须和其他日志库配合才能正常运行。一般来说，需要将
    抽象层（例如slf4j-api-xx.jar）+中间层（例如slf4j-log4j12）+实现层（例如log4j）这三层都配置好才能保证SLF4J正常运行。
    有的日志库也可以去掉中间层，例如slf4j-api和slf4j-simple就可以直接配合。
解决办法：
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.8.0-beta4</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.8.0-beta4</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
参考博文：
    https://blog.csdn.net/qq_40136782/article/details/108659851